#docker network create --driver bridge rossmann-network
#docker network inspect rossmann-network

networks:
  rossmann-network:
    external: true

services:
  oltp_db:
    container_name: oltp-db
    networks:
      - rossmann-network
    image: postgres:latest
    restart: always
    ports:
      - 3000:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  oltp_app:
    container_name: oltp-app
    networks:
      - rossmann-network
    build:
      context: .
      dockerfile: Dockerfile.oltp
    volumes:
      - .:/app
    depends_on:
      oltp_db:
        condition: service_healthy
    env_file:
      - .env

  oltp_sync_api:
    container_name: oltp-sync-api
    networks:
      - rossmann-network
    build:
      context: .
      dockerfile: Dockerfile.sync_api
    volumes:
      - .:/app
    ports:
      - 3100:8000
    depends_on:
      - oltp_app

  oltp_kafka_consumer_1:
    container_name: oltp-kafka-consumer-1
    networks:
      - rossmann-network
    build:
      context: .
      dockerfile: Dockerfile.kafka_consumer
    volumes:
      - .:/app
    depends_on:
      - oltp_app

  oltp_kafka_consumer_2:
    container_name: oltp-kafka-consumer-2
    networks:
      - rossmann-network
    build:
      context: .
      dockerfile: Dockerfile.kafka_consumer
    volumes:
      - .:/app
    depends_on:
      - oltp_app

  oltp_kafka_consumer_3:
    container_name: oltp-kafka-consumer-3
    networks:
      - rossmann-network
    build:
      context: .
      dockerfile: Dockerfile.kafka_consumer
    volumes:
      - .:/app
    depends_on:
      - oltp_app

